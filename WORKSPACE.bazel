# -*- mode: python -*-
# vi: set ft=python :

# Copyright 2024 Massachusetts Institute of Technology.
# Licensed under the BSD 3-Clause License. See LICENSE.TXT for details.

workspace(name = "underactuated")

load(
    "//book/htmlbook/tools:repositories.bzl",
    "rt_dependencies",
    "rt_toolchains",
)

rt_dependencies()


load("@rules_python//python:repositories.bzl", "py_repositories")

py_repositories()

load(
    "@rules_python//python/private:internal_config_repo.bzl",
    "internal_config_repo",
)
internal_config_repo(
    name = "rules_python_internal",
)

rt_toolchains()

load("@bazel_skylib//lib:versions.bzl", "versions")

versions.check("2.0.0")

load("@rules_python//python:pip.bzl", "pip_parse")

pip_parse(
    name = "pip_deps",
    requirements_darwin = "//:requirements-bazel-mac.txt",
    requirements_linux = "//:requirements-bazel-linux.txt",
    #requirements_lock = "//:requirements-bazel.txt",
    experimental_requirement_cycles = {
      "lxml": [
        "lxml",
        "lxml-html-clean",
      ],
    },
)

load("@pip_deps//:requirements.bzl", "install_deps")

install_deps()

load("//book/htmlbook/tools/buildifier:repositories.bzl", "buildifier_dependencies")

buildifier_dependencies()

load("//book/htmlbook/tools/tidy:repositories.bzl", "tidy_dependencies")

tidy_dependencies()

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "drake_models",
    urls = [
        "https://github.com/RobotLocomotion/models/archive/69c92595a391eb023c27ab6ac8f80d58a3e4612d.tar.gz",
        "https://drake-mirror.csail.mit.edu/github/RobotLocomotion/models/69c92595a391eb023c27ab6ac8f80d58a3e4612d.tar.gz",
        "https://s3.amazonaws.com/drake-mirror/github/RobotLocomotion/models/69c92595a391eb023c27ab6ac8f80d58a3e4612d.tar.gz",
    ],
    sha256 = "ba571c8b369a62c3764d250944b27d72071488789b2494604d23342994141fe2",
    strip_prefix = "models-69c92595a391eb023c27ab6ac8f80d58a3e4612d",
    build_file_content = """
package(default_visibility = ["//visibility:public"])

_SRCS = glob(["**/*"])

exports_files(_SRCS)

filegroup(
    name = "drake_models",
    srcs = _SRCS,
)

""",
)
